/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package penjualanikan;

import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author MFD7
 */
public class Dashboard extends javax.swing.JFrame {
    
    int indvarTrans = 1;
    int indvarPel = 0;
    String id_ikan = "";
    int id_jen = 1;
    String harga = "";
    String namaTrans = "";
    String jenisIkan = "";
    String banyakIkan = "";
    String totalIkan = "";
    String sudahIkan = "";
    String forDelete = "";
    String jns = "";
    String idTrans = "";

    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Ikan");
        javax.swing.ImageIcon ic = new javax.swing.ImageIcon(getClass().getResource("/images/ikan.png"));
        this.setIconImage(ic.getImage());
        
        jLabel1.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        jLabel2.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        jLabel13.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnTrans.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnPelunasan.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        jPanel4.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        jPanel5.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnCek.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btnOk.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        jPanel6.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        
        jcombo();
        
        Object a = cboxJenis.getSelectedItem();
        Object b = cboxPembayaran.getSelectedItem();
        String cboxpemb = b.toString();
        String jenis = a.toString();
        
        

        try {
            Statement st = ConnectionManager.logOn().createStatement();
            ResultSet rs = st.executeQuery("Select * from ikan where jenis_ikan='"+a+"'");
            while(rs.next()){
                jns = rs.getString("stok");
                id_ikan = rs.getString("id_jenis");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(jns.equals("0")){
                    lblStock.setText("Stok Habis!");
                }else{
                lblStock.setText(jns+" Kg");
                }
        
        if(cboxpemb.equals("Lunas")){
            textUang.setEditable(false);
        }else{
            textUang.setEditable(true);
        }
        
        tableQuery();
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgPanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        btnPelunasan = new javax.swing.JPanel();
        indPelunasan = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnTrans = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        indTrans = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        contentPanel = new javax.swing.JPanel();
        transPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        textNama = new javax.swing.JTextField();
        textBanyak = new javax.swing.JTextField();
        textUang = new javax.swing.JTextField();
        cboxJenis = new javax.swing.JComboBox<>();
        textHarga = new javax.swing.JTextField();
        cboxPembayaran = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        lblStock = new javax.swing.JLabel();
        btnOk = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        btnCek = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        pelPanel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        textNamapel = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        textHutang = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        cboxPempel = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        textUangpel = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bgPanel.setBackground(new java.awt.Color(255, 255, 255));
        bgPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerPanel.setBackground(new java.awt.Color(78, 109, 255));
        headerPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerPanelMouseDragged(evt);
            }
        });
        headerPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerPanelMousePressed(evt);
            }
        });
        headerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnPelunasan.setBackground(new java.awt.Color(78, 109, 255));
        btnPelunasan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPelunasanMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPelunasanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPelunasanMouseExited(evt);
            }
        });
        btnPelunasan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        indPelunasan.setBackground(new java.awt.Color(78, 109, 255));

        javax.swing.GroupLayout indPelunasanLayout = new javax.swing.GroupLayout(indPelunasan);
        indPelunasan.setLayout(indPelunasanLayout);
        indPelunasanLayout.setHorizontalGroup(
            indPelunasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        indPelunasanLayout.setVerticalGroup(
            indPelunasanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        btnPelunasan.add(indPelunasan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, 10));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Pelunasan");
        btnPelunasan.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 40));

        headerPanel.add(btnPelunasan, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 100, 40));

        btnTrans.setBackground(new java.awt.Color(78, 109, 255));
        btnTrans.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTransMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnTransMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnTransMouseExited(evt);
            }
        });
        btnTrans.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Transaksi");
        btnTrans.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 40));

        indTrans.setBackground(new java.awt.Color(78, 197, 249));

        javax.swing.GroupLayout indTransLayout = new javax.swing.GroupLayout(indTrans);
        indTrans.setLayout(indTransLayout);
        indTransLayout.setHorizontalGroup(
            indTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        indTransLayout.setVerticalGroup(
            indTransLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        btnTrans.add(indTrans, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, 10));

        headerPanel.add(btnTrans, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 100, 40));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Delete_30px.png"))); // NOI18N
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });
        headerPanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 0, 30, 30));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel6MouseClicked(evt);
            }
        });
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Login_30px_1.png"))); // NOI18N
        jPanel6.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 30));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("LOGIN");
        jPanel6.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 60, 30));

        headerPanel.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 90, 30));

        bgPanel.add(headerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 50));

        jPanel1.setBackground(new java.awt.Color(78, 109, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        bgPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 10, 450));

        jPanel2.setBackground(new java.awt.Color(78, 109, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        bgPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 50, -1, -1));

        jPanel3.setBackground(new java.awt.Color(78, 109, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 770, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        bgPanel.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, 770, 10));

        contentPanel.setLayout(new java.awt.CardLayout());

        transPanel.setBackground(new java.awt.Color(255, 255, 255));
        transPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nama :");
        transPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 60, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Jenis Ikan :");
        transPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 100, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Banyak :");
        transPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 70, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Harga :");
        transPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, 60, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Pembayaran :");
        transPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 100, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Jumlah Uang :");
        transPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 100, 30));
        transPanel.add(textNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 210, 30));

        textBanyak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBanyakActionPerformed(evt);
            }
        });
        textBanyak.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textBanyakKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textBanyakKeyTyped(evt);
            }
        });
        transPanel.add(textBanyak, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, 210, 30));

        textUang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textUangKeyTyped(evt);
            }
        });
        transPanel.add(textUang, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 210, 30));

        cboxJenis.setPreferredSize(new java.awt.Dimension(53, 20));
        cboxJenis.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxJenisItemStateChanged(evt);
            }
        });
        transPanel.add(cboxJenis, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 210, 30));

        textHarga.setEditable(false);
        textHarga.setBackground(new java.awt.Color(255, 255, 255));
        transPanel.add(textHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, 210, 30));

        cboxPembayaran.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lunas", "Belum" }));
        cboxPembayaran.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxPembayaranItemStateChanged(evt);
            }
        });
        transPanel.add(cboxPembayaran, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, 210, 30));

        jLabel9.setText("Stok :");
        transPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 40, 40, 30));
        transPanel.add(lblStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 40, 70, 30));

        btnOk.setBackground(new java.awt.Color(78, 109, 255));
        btnOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOkMouseClicked(evt);
            }
        });
        btnOk.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("OK");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        btnOk.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 110, 40));

        transPanel.add(btnOk, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 360, 110, 40));

        btnCek.setBackground(new java.awt.Color(78, 109, 255));
        btnCek.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Cek Harga");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        btnCek.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 30));

        transPanel.add(btnCek, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 160, 70, 30));

        contentPanel.add(transPanel, "card2");

        pelPanel.setBackground(new java.awt.Color(255, 255, 255));
        pelPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Nama :");
        pelPanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 70, 35));

        textNamapel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textNamapel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNamapelActionPerformed(evt);
            }
        });
        textNamapel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textNamapelKeyReleased(evt);
            }
        });
        pelPanel.add(textNamapel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 230, 40));

        jPanel4.setBackground(new java.awt.Color(78, 109, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("CEK");
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 40));

        pelPanel.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, 70, 40));

        textHutang.setEditable(false);
        textHutang.setBackground(new java.awt.Color(255, 255, 255));
        pelPanel.add(textHutang, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 230, 40));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Hutang :");
        pelPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 80, 40));

        jPanel5.setBackground(new java.awt.Color(78, 109, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Bayar");
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });
        jPanel5.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 40));

        pelPanel.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 380, 100, 40));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        )

    );
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);

    pelPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 750, 230));

    jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel17.setText("Pembayaran :");
    pelPanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 250, 140, 40));

    cboxPempel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    cboxPempel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lunas", "Belum" }));
    cboxPempel.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            cboxPempelItemStateChanged(evt);
        }
    });
    pelPanel.add(cboxPempel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 250, 170, 40));

    jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    jLabel18.setText("Jumlah Uang :");
    pelPanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 300, 130, 40));

    textUangpel.setEditable(false);
    textUangpel.setBackground(new java.awt.Color(255, 255, 255));
    textUangpel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    textUangpel.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyTyped(java.awt.event.KeyEvent evt) {
            textUangpelKeyTyped(evt);
        }
    });
    pelPanel.add(textUangpel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 300, 170, 40));

    contentPanel.add(pelPanel, "card3");

    bgPanel.add(contentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 770, 440));

    getContentPane().add(bgPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 500));

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTransMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTransMouseEntered
        setpaneColor(btnTrans);
        setindColor(indTrans);
    }//GEN-LAST:event_btnTransMouseEntered

    private void btnTransMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTransMouseExited
        if(indvarTrans==0){
            resetpaneColor(new JPanel[]{indTrans});
            
        }
        resetpaneColor(new JPanel[]{btnTrans});
    }//GEN-LAST:event_btnTransMouseExited

    private void btnPelunasanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPelunasanMouseEntered
        setpaneColor(btnPelunasan);
        setindColor(indPelunasan);
    }//GEN-LAST:event_btnPelunasanMouseEntered

    private void btnPelunasanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPelunasanMouseExited
        if(indvarPel==0){
            resetindColor(new JPanel[]{indPelunasan});
            
        }
        resetpaneColor(new JPanel[]{btnPelunasan});
        
    }//GEN-LAST:event_btnPelunasanMouseExited

    private void btnTransMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTransMouseClicked
        indvarTrans = 1;
        indvarPel = 0;
        
        setindColor(indTrans);
        resetindColor(new JPanel[]{indPelunasan});
        
        contentPanel.removeAll();
        contentPanel.repaint();
        contentPanel.revalidate();
        contentPanel.add(transPanel);
        contentPanel.repaint();
        contentPanel.revalidate();
    }//GEN-LAST:event_btnTransMouseClicked

    private void btnPelunasanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPelunasanMouseClicked
        indvarPel = 1;
        indvarTrans = 0;
        
        setindColor(indPelunasan);
        resetindColor(new JPanel[]{indTrans});
        
        contentPanel.removeAll();
        contentPanel.repaint();
        contentPanel.revalidate();
        contentPanel.add(pelPanel);
        contentPanel.repaint();
        contentPanel.revalidate();
        tableQuery();
    }//GEN-LAST:event_btnPelunasanMouseClicked

    private void cboxJenisItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxJenisItemStateChanged

        Object a = cboxJenis.getSelectedItem();
        String jenis = a.toString();
        String jns = "";
        

        try {
            Statement st = ConnectionManager.logOn().createStatement();
            ResultSet rs = st.executeQuery("Select * from ikan where jenis_ikan='"+a+"'");
            while(rs.next()){
                jns = rs.getString("stok");
                id_ikan = rs.getString("id_jenis");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(jns.equals("0")){
                    lblStock.setText("Stok Habis!");
                    JOptionPane.showMessageDialog(this, "Stok ikan "+jenis+" habis!");
                }else{
                lblStock.setText(jns+" Kg");
                }
        id_jen = Integer.parseInt(id_ikan);
    }//GEN-LAST:event_cboxJenisItemStateChanged

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        Object a = cboxPembayaran.getSelectedItem();
        String pemb = a.toString();
        Object b = cboxJenis.getSelectedItem();
        String jenis = b.toString();
        
        String jjns = "";
        try {
                    
            Statement st = ConnectionManager.logOn().createStatement();
            ResultSet rs = st.executeQuery("Select * from ikan where jenis_ikan='"+a+"'");
            while(rs.next()){
                jjns = rs.getString("stok");
                id_ikan = rs.getString("id_jenis");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(jjns.equals("0")){
            lblStock.setText("Stok Habis!");
        }else{
            lblStock.setText(jjns+" Kg");
        }
        
        if(textNama.getText().equals("") || textBanyak.getText().equals("") || textUang.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Silahkan isi data terlebih dahulu!");
        }else{
            
            String idLunas = textNama.getText()+jenis+pemb+id_ikan+textBanyak.getText();
            Double ttl = Double.parseDouble(harga)*Double.parseDouble(textBanyak.getText());
            Double kembalian = Double.parseDouble(textUang.getText())-ttl;
            int opt = JOptionPane.showConfirmDialog(null, "Lanjutkan?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
            LocalDate localDate = LocalDate.now();
            String tanggal = dtf.format(localDate);
        
            if(opt==0){
                if(pemb.equals("Lunas")){
                    try{
                        Statement st = ConnectionManager.logOn().createStatement();
                        int rs = st.executeUpdate("Insert into trans_lunas(id_transLunas, nama, id_jenis, banyak, total, tanggal) "
                                + "values(NULL,'"+textNama.getText()+"',"+id_jen+","+textBanyak.getText()+","+ttl+",'"+tanggal+"')");
                    }catch(SQLException ex){
                        Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try{
                        Statement st = ConnectionManager.logOn().createStatement();
                        int rs = st.executeUpdate("update ikan set stok = stok-"+textBanyak.getText()+" where id_jenis = "+id_jen);
                        JOptionPane.showMessageDialog(null, "Pembelian berhasil!");
                    }catch(SQLException ex){
                        Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try{
                        Statement st = ConnectionManager.logOn().createStatement();
                        int rs = st.executeUpdate("insert into history(id, nama, uang, tanggal) values(NULL,'"+textNama.getText()+"',"+textUang.getText()+",'"+tanggal+"')");
                    }catch(SQLException ex){
                        Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    try{
                        Statement st = ConnectionManager.logOn().createStatement();
                        int rs = st.executeUpdate("Insert into transaksi(id_trans, nama, id_jenis, banyak, total, sdh_dibayar, tanggal) "
                                + "values(NULL,'"+textNama.getText()+"',"+id_jen+","+textBanyak.getText()+","+ttl+","+textUang.getText()+",'"+tanggal+"')");
                    }catch(SQLException ex){
                        Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try{
                        Statement st = ConnectionManager.logOn().createStatement();
                        int rs = st.executeUpdate("insert into history(id, nama, uang, tanggal) values(NULL,'"+textNama.getText()+"',"+textUang.getText()+",'"+tanggal+"')");
                        JOptionPane.showMessageDialog(null, "Pembelian berhasil!");
                    }catch(SQLException ex){
                        Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                textNama.setText("");
                textBanyak.setText("");
                textHarga.setText("");
                textUang.setText("");
                cboxJenis.setSelectedItem("Mas");
                cboxPembayaran.setSelectedItem("Lunas");
                
                }
        }
        
        
    }//GEN-LAST:event_jLabel10MouseClicked

    private void btnOkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOkMouseClicked
        Object a = cboxPembayaran.getSelectedItem();
        String pemb = a.toString();
        Object b = cboxJenis.getSelectedItem();
        String jenis = b.toString();
        String idLunas = textNama.getText()+jenis+pemb+id_ikan;
        int ttl = Integer.parseInt(harga)*Integer.parseInt(textBanyak.getText());
        int kembalian = Integer.parseInt(textUang.getText())-ttl;
        
        int opt = JOptionPane.showConfirmDialog(null, "Kembalian Rp "+Integer.toString(kembalian)+"\n"+"Lanjutkan?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if(opt==0){
            if(pemb.equals("Lunas")){
                try{
                    Statement st = ConnectionManager.logOn().createStatement();
                    int rs = st.executeUpdate("Insert into trans_lunas(id_transLunas, nama, id_jenis, banyak, total) "
                            + "values('"+idLunas+"','"+textNama.getText()+"',"+id_jen+","+textBanyak.getText()+","+ttl+")");
                }catch(SQLException ex){
                    Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnOkMouseClicked

    private void textBanyakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBanyakActionPerformed
        textHarga.setText(textBanyak.getText());
    }//GEN-LAST:event_textBanyakActionPerformed

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        
        NumberFormat format = NumberFormat.getCurrencyInstance(Locale.ITALY);
        
        if(textBanyak.getText().equals("")){
            Component frame;
            JOptionPane.showMessageDialog(this, "Silahkan isi banyak terlebih dahulu!");
        }else{
        
            try {
                Statement st = ConnectionManager.logOn().createStatement();
                ResultSet rs = st.executeQuery("Select harga from ikan where id_jenis="+id_ikan);
                while(rs.next()){
                    harga = rs.getString("harga");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
      
            textUang.setText(Double.toString(Double.parseDouble(harga)*Double.parseDouble(textBanyak.getText())));
            textHarga.setText(format.format(Double.parseDouble(harga)*Double.parseDouble(textBanyak.getText())).replace("€", "Rp"));
        }
    }//GEN-LAST:event_jLabel11MouseClicked

    private void textBanyakKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBanyakKeyTyped
        char vchar = evt.getKeyChar();
        if(Character.isLetter(vchar)&&!evt.isAltDown()){
            evt.consume();
            
        }
    }//GEN-LAST:event_textBanyakKeyTyped

    private void textUangKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textUangKeyTyped
        char vchar = evt.getKeyChar();
        if(!(Character.isDigit(vchar))
                || (vchar == KeyEvent.VK_BACK_SPACE)
                || (vchar == KeyEvent.VK_DELETE)){
            evt.consume();
            
        }
    }//GEN-LAST:event_textUangKeyTyped

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel13MouseClicked

    private void textNamapelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNamapelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNamapelActionPerformed

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        String ttl = "";
        String sdh = "";
        NumberFormat format = NumberFormat.getCurrencyInstance(Locale.ITALY);
        try {
                Statement st = ConnectionManager.logOn().createStatement();
                ResultSet rs = st.executeQuery("Select * from transaksi where nama='"+textNamapel.getText()+"'");
                while(rs.next()){
                    ttl = rs.getString("total");
                    sdh = rs.getString("sdh_dibayar");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        textHutang.setText(format.format(Integer.parseInt(ttl)-Integer.parseInt(sdh)).replace("€", "Rp"));
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        int opt = JOptionPane.showConfirmDialog(null, "Bayar?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        Object a = cboxPempel.getSelectedItem();
        String aa = a.toString();
        String sdh = "";
        String stk = "";
        String jn = "";
        String nama = "";
        
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDate localDate = LocalDate.now();
        String tanggal = dtf.format(localDate);
        
        
        int column = 5;
        int rows[]=this.jTable1.getSelectedRows();
        
        if(textHutang.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Silahkan pilih di tabel terlebih dahulu!");
        }else{
            for(int i=0;i<rows.length;i++)
            {
                int modelRow = jTable1.convertRowIndexToModel(rows[i]);
                String value = jTable1.getModel().getValueAt(modelRow, column).toString();
                sdh = value;
                stk = jTable1.getModel().getValueAt(modelRow, 3).toString();
                jn = jTable1.getModel().getValueAt(modelRow, 2).toString();
                nama = jTable1.getModel().getValueAt(modelRow, 1).toString();
            }  
            int tamb = Integer.parseInt(sdh)+Integer.parseInt(textUangpel.getText());
            if(opt==0){
                if(aa.equals("Lunas")){
                   try{
                    Statement st = ConnectionManager.logOn().createStatement();
                    int rs = st.executeUpdate("delete from transaksi where id_trans="+forDelete);
                    JOptionPane.showMessageDialog(this, "Pembayaran Berhasil!");

                    }catch(SQLException ex){
                        Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                   try{
                            Statement st = ConnectionManager.logOn().createStatement();
                            int rs = st.executeUpdate("insert into history(id, nama, uang, tanggal) values(NULL,'"+nama+"',"+textUangpel.getText()+",'"+tanggal+"')");
                        }catch(SQLException ex){
                            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                        }
                }else {
                    try{
                    Statement st = ConnectionManager.logOn().createStatement();
                    int rs = st.executeUpdate("update transaksi set sdh_dibayar = "+tamb+" where id_trans="+forDelete);
                    JOptionPane.showMessageDialog(this, "Pembayaran Berhasil!");

                    }catch(SQLException ex){
                        Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                    try{
                            Statement st = ConnectionManager.logOn().createStatement();
                            int rs = st.executeUpdate("insert into history(id, nama, uang, tanggal) values(NULL,'"+nama+"',"+textUangpel.getText()+",'"+tanggal+"')");
                        }catch(SQLException ex){
                            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                        }
                }

                tableQuery();
                DefaultTableModel table = (DefaultTableModel)jTable1.getModel();
                table.fireTableDataChanged();
                textNamapel.setText("");
                textHutang.setText("");
            }
        }

        
    }//GEN-LAST:event_jLabel16MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        
        int column = 1;
        int rows[]=this.jTable1.getSelectedRows();

        for(int i=0;i<rows.length;i++)
        {
            int modelRow = jTable1.convertRowIndexToModel(rows[i]);
            String value = jTable1.getModel().getValueAt(modelRow, column).toString();
            textNamapel.setText(value);
            String value2 = jTable1.getModel().getValueAt(modelRow, 0).toString();
            forDelete = value2;
            Object a2 = cboxPempel.getSelectedItem();
            String cboxpempel = a2.toString();
            if(cboxpempel.equals("Lunas")){
                String value1 = jTable1.getModel().getValueAt(modelRow, 6).toString();
                textUangpel.setText(value1);
            }
        }  
        
        String ttl = "";
        String sdh = "";
        NumberFormat format = NumberFormat.getCurrencyInstance(Locale.ITALY);
        try {
                Statement st = ConnectionManager.logOn().createStatement();
                ResultSet rs = st.executeQuery("Select * from transaksi where nama='"+textNamapel.getText()+"'");
                while(rs.next()){
                    ttl = rs.getString("total");
                    sdh = rs.getString("sdh_dibayar");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        textHutang.setText(format.format(Integer.parseInt(ttl)-Integer.parseInt(sdh)).replace("€", "Rp"));
    }//GEN-LAST:event_jTable1MouseClicked

    private void textNamapelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textNamapelKeyReleased
        DefaultTableModel table = (DefaultTableModel)jTable1.getModel();
        String search = textNamapel.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        jTable1.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter("(?i)"+search));
    }//GEN-LAST:event_textNamapelKeyReleased

    private void textBanyakKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textBanyakKeyReleased
        NumberFormat format = NumberFormat.getCurrencyInstance(Locale.ITALY);
        
            try {
                Statement st = ConnectionManager.logOn().createStatement();
                ResultSet rs = st.executeQuery("Select harga from ikan where id_jenis="+id_ikan);
                while(rs.next()){
                    harga = rs.getString("harga");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
      
            textUang.setText(Double.toString(Double.parseDouble(harga)*Double.parseDouble(textBanyak.getText())));
            textHarga.setText(format.format(Double.parseDouble(harga)*Double.parseDouble(textBanyak.getText())).replace("€", "Rp"));
    }//GEN-LAST:event_textBanyakKeyReleased

    private void cboxPembayaranItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxPembayaranItemStateChanged
        Object a = cboxPembayaran.getSelectedItem();
        String ab = a.toString();
        if(ab.equals("Lunas")){
            textUang.setEditable(false);
        }else{
            textUang.setEditable(true);
            textUang.setText("0");
        }
    }//GEN-LAST:event_cboxPembayaranItemStateChanged

    private void textUangpelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textUangpelKeyTyped
        char vchar = evt.getKeyChar();
        if(!(Character.isDigit(vchar))
                || (vchar == KeyEvent.VK_BACK_SPACE)
                || (vchar == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_textUangpelKeyTyped

    private void cboxPempelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxPempelItemStateChanged

        Object a = cboxPempel.getSelectedItem();
        String o = a.toString();
        if(o.equals("Lunas")){
            textUangpel.setEditable(false);
            int rows[]=this.jTable1.getSelectedRows();

            for(int i=0;i<rows.length;i++)
            {
                int modelRow = jTable1.convertRowIndexToModel(rows[i]);
                String value1 = jTable1.getModel().getValueAt(modelRow, 6).toString();
                textUangpel.setText(value1);
            }
        }else{
            textUangpel.setEditable(true);
            textUangpel.setText("");
        }
    }//GEN-LAST:event_cboxPempelItemStateChanged
    
    int xx, xy;
    private void headerPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerPanelMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-xx,y-xy);
    }//GEN-LAST:event_headerPanelMouseDragged

    private void headerPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerPanelMousePressed
        xx = evt.getX();
        xy = evt.getY();
    }//GEN-LAST:event_headerPanelMousePressed

    private void jPanel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseClicked
        Login lg = new Login();
        lg.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jPanel6MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }
    
    private void setpaneColor(JPanel pane){
        pane.setBackground(new Color(78,220,253));
    }
    
    private void resetpaneColor(JPanel [] pane){
        for(int i=0;i<pane.length;i++){
           pane[i].setBackground(new Color(78,109,255));
        }
    }
    
    private void setindColor(JPanel pane){
        pane.setBackground(new Color(78,197,249));
    }
    
    private void resetindColor(JPanel [] pane){
        for(int i=0;i<pane.length;i++){
           pane[i].setBackground(new Color(78,109,255));
        }
    }
    
    private void tableQuery(){
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        
        DefaultTableModel model = new DefaultTableModel(new String[]{"Id", "Nama", "Jenis Ikan", "Banyak", "Total", "Sudah Dibayar", "Kurang"}, 0);
        String jns_ikan = "";
        try {
            Statement st = ConnectionManager.logOn().createStatement();
            ResultSet rs = st.executeQuery("Select * From transaksi, ikan where transaksi.id_jenis=ikan.id_jenis");
            DefaultTableModel t=(DefaultTableModel)jTable1.getModel();
            if(rs.next() == false){
                t.setRowCount(0);
            }else{
                do{
                namaTrans = rs.getString("nama");
                banyakIkan = rs.getString("banyak");
                totalIkan = rs.getString("total");
                sudahIkan = rs.getString("sdh_dibayar");
                jns_ikan = rs.getString("jenis_ikan");
                idTrans = rs.getString("id_trans");
                model.addRow(new Object[]{idTrans, namaTrans, jns_ikan, banyakIkan, totalIkan, sudahIkan, Integer.toString(Integer.parseInt(totalIkan)-Integer.parseInt(sudahIkan))});
                jTable1.setModel(model); 
                }while(rs.next());
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        rightRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        try{
            jTable1.getColumnModel().getColumn(0).setCellRenderer(rightRenderer);
            jTable1.getColumnModel().getColumn(1).setCellRenderer(rightRenderer);
            jTable1.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
            jTable1.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
            jTable1.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
            jTable1.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
            jTable1.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);
            jScrollPane1.setBackground(new Color(0,0,0,0));
            jScrollPane1.setOpaque(false);
            jScrollPane1.getViewport().setOpaque(false);
        }catch(ArrayIndexOutOfBoundsException ab){
            ;
        }
        
        
        
    }
    
    private void jcombo(){
        try {
            Statement st = ConnectionManager.logOn().createStatement();
            ResultSet rs = st.executeQuery("Select * from ikan");
            while(rs.next()){
                cboxJenis.addItem(rs.getString("jenis_ikan"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bgPanel;
    private javax.swing.JPanel btnCek;
    private javax.swing.JPanel btnOk;
    private javax.swing.JPanel btnPelunasan;
    private javax.swing.JPanel btnTrans;
    private javax.swing.JComboBox<String> cboxJenis;
    private javax.swing.JComboBox<String> cboxPembayaran;
    private javax.swing.JComboBox<String> cboxPempel;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JPanel indPelunasan;
    private javax.swing.JPanel indTrans;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblStock;
    private javax.swing.JPanel pelPanel;
    private javax.swing.JTextField textBanyak;
    private javax.swing.JTextField textHarga;
    private javax.swing.JTextField textHutang;
    private javax.swing.JTextField textNama;
    private javax.swing.JTextField textNamapel;
    private javax.swing.JTextField textUang;
    private javax.swing.JTextField textUangpel;
    private javax.swing.JPanel transPanel;
    // End of variables declaration//GEN-END:variables
}
